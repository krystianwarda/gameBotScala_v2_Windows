FROM apache/airflow:2.7.3-python3.10

USER root

# Install base tools
RUN apt-get update && \
    apt-get install -y wget unzip gnupg curl openjdk-11-jdk apt-transport-https ca-certificates

# RUN apt-get update && \
#     apt-get install -y sshpass

RUN apt-get update && apt-get install -y sshpass rsync
# RUN apt-get update && apt-get install -y rsync

# Install SBT
RUN curl -sL "https://keyserver.ubuntu.com/pks/lookup?op=get&search=0x99e82a75642ac823" | gpg --dearmor > /usr/share/keyrings/sbt-keyring.gpg && \
    echo "deb [signed-by=/usr/share/keyrings/sbt-keyring.gpg] https://repo.scala-sbt.org/scalasbt/debian all main" > /etc/apt/sources.list.d/sbt.list && \
    echo "deb [signed-by=/usr/share/keyrings/sbt-keyring.gpg] https://repo.scala-sbt.org/scalasbt/debian /" >> /etc/apt/sources.list.d/sbt.list && \
    apt-get update && \
    apt-get install -y sbt

# Install Terraform
ENV TERRAFORM_VERSION=1.6.6
RUN wget https://releases.hashicorp.com/terraform/${TERRAFORM_VERSION}/terraform_${TERRAFORM_VERSION}_linux_amd64.zip && \
    unzip terraform_${TERRAFORM_VERSION}_linux_amd64.zip && \
    mv terraform /usr/local/bin/ && \
    chmod +x /usr/local/bin/terraform && \
    terraform --version && \
    rm terraform_${TERRAFORM_VERSION}_linux_amd64.zip

# Install Google Cloud SDK
RUN echo "deb [signed-by=/usr/share/keyrings/cloud.google.gpg] https://packages.cloud.google.com/apt cloud-sdk main" \
        > /etc/apt/sources.list.d/google-cloud-sdk.list && \
    curl https://packages.cloud.google.com/apt/doc/apt-key.gpg | \
        gpg --dearmor > /usr/share/keyrings/cloud.google.gpg && \
    apt-get update && \
    apt-get install -y google-cloud-sdk

# ✅ Install build tools as root only (not pip)
RUN apt-get install -y gcc python3-dev && \
    apt-get clean && rm -rf /var/lib/apt/lists/*


# ✅ Switch to airflow user BEFORE using pip
USER airflow

RUN pip install pywinrm
RUN pip install vncdotool
# Copy and install Python deps (includes compiled crcmod and providers)
COPY requirements.txt /
RUN pip install --no-binary :all: --no-cache-dir crcmod && \
    pip install --no-cache-dir -r /requirements.txt
